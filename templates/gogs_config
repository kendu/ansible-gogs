APP_NAME = {{ gogs_title}}
RUN_USER = {{ gogs_username }}
RUN_MODE = prod

[repository]
ROOT = /home/{{ gogs_username }}/gogs-repositories
SCRIPT_TYPE = bash

[server]
PROTOCOL = {{ gogs_protocol }}
DOMAIN = {{ gogs_url }}
ROOT_URL = {{ gogs_protocol }}://{{ gogs_url }}/
HTTP_ADDR = 0.0.0.0
HTTP_PORT = {{ gogs_port }}
SSH_PORT =  {{ gogs_ssh_port }}
OFFLINE_MODE = false
DISABLE_ROUTER_LOG = false
CERT_FILE = {{ gogs_ssl_cert }}
KEY_FILE = {{ gogs_ssl_key }}
STATIC_ROOT_PATH =
ENABLE_GZIP = false
LANDING_PAGE = home

[database]
DB_TYPE = mysql
HOST = {{ gogs_database_host }}
NAME = {{ gogs_username }}
USER = {{ gogs_username }}
PASSWD = {{ lookup('password', gogs_database_password_file + ' length=64' ) }}
SSL_MODE = disable
PATH = data/gogs.db

[admin]

[security]
INSTALL_LOCK = true
SECRET_KEY = GbIKDK3xXm5XOVf
LOGIN_REMEMBER_DAYS = 7
COOKIE_USERNAME = gogs_awesome
COOKIE_REMEMBER_NAME = gogs_incredible
REVERSE_PROXY_AUTHENTICATION_USER = X-WEBAUTH-USER

[service]
ACTIVE_CODE_LIVE_MINUTES = 180
RESET_PASSWD_CODE_LIVE_MINUTES = 180
REGISTER_EMAIL_CONFIRM = false
DISABLE_REGISTRATION = true
REQUIRE_SIGNIN_VIEW = true
ENABLE_CACHE_AVATAR = false
ENABLE_NOTIFY_MAIL = false
ENABLE_REVERSE_PROXY_AUTHENTICATION = false
ENABLE_REVERSE_PROXY_AUTO_REGISTERATION = false

[webhook]
TASK_INTERVAL = 1
DELIVER_TIMEOUT = 5

[mailer]
ENABLED = true
SEND_BUFFER_LEN = 10
SUBJECT = %(APP_NAME)s
HOST = localhost
SKIP_VERIFY =
FROM = git@kendu.si
USER =
PASSWD =

[oauth]
ENABLED = true

[oauth.github]
ENABLED = {{ gogs_github_oauth }}
CLIENT_ID = {{ gogs_github_oauth_client_id }}
CLIENT_SECRET = {{ gogs_github_oauth_client_secret }}
SCOPES = https://api.github.com/user
AUTH_URL = https://github.com/login/oauth/authorize
TOKEN_URL = https://github.com/login/oauth/access_token

; Get client id and secret from
; https://console.developers.google.com/project
[oauth.google]
ENABLED = {{ gogs_google_oauth }}
CLIENT_ID = {{ gogs_google_oauth_client_id }}
CLIENT_SECRET = {{ gogs_google_oauth_client_secret }}
SCOPES = https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile
AUTH_URL = https://accounts.google.com/o/oauth2/auth
TOKEN_URL = https://accounts.google.com/o/oauth2/token

[oauth.qq]
ENABLED = false
CLIENT_ID =
CLIENT_SECRET =
SCOPES = get_user_info
; QQ 互联
AUTH_URL = https://graph.qq.com/oauth2.0/authorize
TOKEN_URL = https://graph.qq.com/oauth2.0/token

[oauth.weibo]
ENABLED = false
CLIENT_ID =
CLIENT_SECRET =
SCOPES = all
AUTH_URL = https://api.weibo.com/oauth2/authorize
TOKEN_URL = https://api.weibo.com/oauth2/access_token

[cache]
ADAPTER = memory
INTERVAL = 60
HOST =

[session]
PROVIDER = file

PROVIDER_CONFIG = data/sessions
COOKIE_NAME = i_like_gogits
COOKIE_SECURE = false
ENABLE_SET_COOKIE = true
GC_INTERVAL_TIME = 86400
SESSION_LIFE_TIME = 86400

[picture]
SERVICE = server
AVATAR_UPLOAD_PATH = data/avatars
GRAVATAR_SOURCE = gravatar
DISABLE_GRAVATAR = false

[attachment]
ENABLE = true
PATH = data/attachments
ALLOWED_TYPES = image/jpeg|image/png
MAX_SIZE = 32
MAX_FILES = 10

[time]
FORMAT =

[log]
ROOT_PATH =
MODE = file
BUFFER_LEN = 10000
LEVEL = Trace

[log.console]
LEVEL =

[log.file]
LEVEL =
LOG_ROTATE = true
MAX_LINES = 1000000
MAX_SIZE_SHIFT = 28
DAILY_ROTATE = true
MAX_DAYS = 7

[log.conn]
LEVEL =
RECONNECT_ON_MSG = false
RECONNECT = false
PROTOCOL = tcp
ADDR =

[log.smtp]
LEVEL =
SUBJECT = Diagnostic message from serve
HOST =
USER =
PASSWD =
RECEIVERS =

[log.database]
LEVEL =
DRIVER =
CONN =

[git]
MAX_GIT_DIFF_LINES = 10000
GC_ARGS =

[git.fsck]
ENABLE = true
INTERVAL = 24
ARGS =
